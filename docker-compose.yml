version: "3.8"
services:

  access-control-service:
    container_name: access-control-service
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    user: "${UID}:${GID}"
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_started
    networks:
      - t_bot_network
    restart: always

  redis:
    image: redis:latest
    container_name: access-control_db
    ports:
      - "${REDIS_EXTERNAL_PORT:-6379}:6379"
    volumes:
      - "redis_data:/data"
    networks:
      - t_bot_network

    command: >
        sh -c '
          mkdir -p /usr/local/etc/redis &&
          echo "bind 0.0.0.0" > /usr/local/etc/redis/redis.conf &&
          echo "port $REDIS_PORT" >> /usr/local/etc/redis/redis.conf &&
          echo "requirepass $REDIS_PASSWORD" >> /usr/local/etc/redis/redis.conf &&
          echo "appendonly yes" >> /usr/local/etc/redis/redis.conf &&
          echo "appendfsync everysec" >> /usr/local/etc/redis/redis.conf &&
          echo "user default on nopass ~* +@all" > /usr/local/etc/redis/users.acl &&
          echo "user $REDIS_USER on >$REDIS_USER_PASSWORD ~* +@all" >> /usr/local/etc/redis/users.acl &&
          redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
        '
    healthcheck:
        test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
        interval: 30s
        timeout: 10s
        retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true

volumes:
  redis_data:

networks:
  t_bot_network:
    external: true
#  access-control_network:
#    driver: bridge
#    name: "access-control_network"